// merge sort using malloc function//
#include<stdio.h>
#include<stdlib.h>

void merge(int *arr,int lb,int mid,int ub)
{
    int i=lb,j=mid+1,k=0,*temp;
    temp=(int*)malloc((ub-lb+1)*sizeof(int));
    while(i<=mid&&j<=ub)
    {
        if(arr[i]<=arr[j])
        {
            temp[k]=arr[i];
            i++;
        }
        else
        {
            temp[k]=arr[j];
            j++;
        }
        k++;
    }
    if(i>mid)
    {
        while(j<=ub)
        {
            temp[k]=arr[j];
            j++;
            k++;
        }
    }
        else
        {
            while(i<=mid)
            {
                temp[k]=arr[i];
                i++;
                k++;
            }
        }
       k=0;
    for(i=lb;i<=ub;i++)
    {
        arr[i]=temp[k];
        k++;
    }
}
void merge_sort(int *arr,int lb,int ub)
{
    int mid;
    if(lb<ub)
    {
        mid=(ub+lb)/2;
        merge_sort(arr,lb,mid);
        merge_sort(arr,mid+1,ub);
        merge(arr,lb,mid,ub);
    }
 }

 void main()
{
    int *arr,i,n;
    printf("enter number of elements:");
    scanf("%d",&n);
    arr=(int*)malloc(n*sizeof(int));
    printf("enter %d elements:",n);
    for(i=0;i<n;i++)
        scanf("%d",&arr[i]);
    merge_sort(arr,0,n-1);
    printf("sorted elements are:");
    for(i=0;i<n;i++)
    printf("%d ",arr[i]);
}


